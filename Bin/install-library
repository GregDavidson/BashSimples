#!/usr/bin/bash

# Who are we, where are we, where is our stuff, what are our destinations?

pgm_name="${0##*/}"
pgm_path=$(realpath "$0")
bash_dir="${pgm_path%/[Bb]in/*}"
simples_dir="$bash_dir/Simples"
lib_dest=~/Lib
bash_dest="$lib_dest/Bash"
simples_dest="$bash_dest/Simples"

# Communication and Escapes

pgm_msg() {
    level="$1"; shift
    >&2 printf "%s %s: %s\n" "$pgm_name" "$level" "$*"
}
pgm() {
    local code="$1"; level="$2"; shift 2
    pgm_msg "$level" "$@"
    "$level" "$code"
}

# Check what we can regardless of our specific goal

(( BASH_VERSINFO[0] >= 5 )) ||
    pgm 1 exit "Upgrade Bash from $BASH_VERSION to >= 5"

for d in "$bash_dir" "$simples_dir"; do
    [ -d "$d" ] || pgm 2 exit "No directory $d"
done

for f in "$simples_dir/simples.bash"; do
    [ -f "$f" ] || pgm 3 exit "No file $f"
done

[ -e "$simples_dest" ] && pgm 0 exit "You already have $simples_dest"

# Action Processor

# do_action name-of-action-array
do_action() {
    local -n a="$1"
    local answer junk
    local src="${a[2]}"; dst="${a[3]}"; cmd="${a[1]} $src $dst"
    printf "We will %s using:\n\t%s\nOK? [yn] " "${a[0]}" "$cmd"
    read answer junk
    [[ "X$answer" == X[Yy]* ]] ||
        pgm 10 return "Your answer was not y. Goodbye"
    local dst_dir=$(dirname "$dst")
    mkdir -p "$dst_dir" ||
        pgm 11 return "Cannot mkdir -p $dst_dir"
    [ -e "$src" ] || pgm 12 return "No $src"
    [ -L "$bash_dest" ] || [ -e "$bash_dest" ] &&
        pgm 12 return "$(file $dst)"
    eval "$cmd" || pgm 14 return "command failed: $cmd"
}

# Action Arrays

mv_bash=( "move $bash_dir to $bash_dest"
          "mv" "$bash_dir" "$bash_dest" )
ln_bash=( "link $bash_dir to $bash_dest"
          "ln -s" "$bash_dir" "$bash_dest" )
cp_bash=( "copy $bash_dir to $bash_dest"
          "cp -a" "$bash_dir" "$bash_dest" )
mv_simples=( "move $simples_dir to $simples_dest"
             "mv" "$simples_dir" "$simples_dest" )
ln_simples=( "link $simples_dir to $simples_dest"
             "ln -s" "$simples_dir" "$simples_dest" )
cp_simples=( "copy $simples_dir to $simples_dest"
             "cp -a" "$simples_dir" "$simples_dest" )

# Determine Relevant Actions

actions=( )
[ -d "$bash_dest" ] || {
    actions+=(mv_bash ln_bash cp_bash)
}
actions+=(mv_simples ln_simples cp_simples)

# Build a Menu

for (( i=0; i < ${#actions[@]}; i++ )); do
    eval "menu[$i]=\"\${${actions[$i]}[0]}\""
done

# Offer our services

select request in "${menu[@]}"; do
    let index=--REPLY
    do_action "${actions[index]}"
    exit $?
done
